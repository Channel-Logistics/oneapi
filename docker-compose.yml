services:
  rabbitmq:
    image: rabbitmq:3.13-management
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: pass
    ports:
      - "5672:5672" # AMQP
      - "15672:15672" # UI
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "-q", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 30
  gateway:
    build:
      context: .
      dockerfile: gateway/Dockerfile
    environment:
      AMQP_URL: ${AMQP_URL:-amqp://user:pass@rabbitmq:5672}
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: unless-stopped
    ports:
      - "8000:8000"
  aggregator:
    build:
      context: .
      dockerfile: aggregator/Dockerfile
    env_file:
      - ./.env
    environment:
      AMQP_URL: ${AMQP_URL:-amqp://user:pass@rabbitmq:5672}
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

  client:
    build:
      context: .
      dockerfile: client/Dockerfile
    ports:
      - "3000:80"
  notifications:
    build:
      context: .
      dockerfile: notifications/Dockerfile
    env_file:
      - ./.env
    environment:
      AMQP_URL: ${AMQP_URL:-amqp://user:pass@rabbitmq:5672}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
      NOTIFY_EMAIL_FROM: ${NOTIFY_EMAIL_FROM}
      NOTIFY_EMAIL_TO: ${NOTIFY_EMAIL_TO}
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
